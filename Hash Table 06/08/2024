import java.util.LinkedList;
import java.util.Scanner;

class HashTable {
    private int size;
    private LinkedList<Entry>[] table;

    static class Entry {
        int key;
        String value;

        Entry(int key, String value) {
            this.key = key;
            this.value = value;
        }
    }

    @SuppressWarnings("unchecked")
    public HashTable(int size) {
        this.size = size;
        table = new LinkedList[size];
        for (int i = 0; i < size; i++) {
            table[i] = new LinkedList<>();
        }
    }

    private int hash(int key) {
        return key % size;
    }

    public void insert(int key, String value) {
        int index = hash(key);
        for (Entry entry : table[index]) {
            if (entry.key == key) {
                entry.value = value;
                return;
            }
        }
        table[index].add(new Entry(key, value));
    }

    public String search(int key) {
        int index = hash(key);
        for (Entry entry : table[index]) {
            if (entry.key == key) {
                return entry.value;
            }
        }
        return null;
    }

    public void remove(int key) {
        int index = hash(key);
        for (Entry entry : table[index]) {
            if (entry.key == key) {
                String removedValue = entry.value;
                table[index].remove(entry);
                return;
            }
        }
    }

    public void display() {
        for (int i = 0; i < size; i++) {
            System.out.print("Index " + i + ": ");
            for (Entry entry : table[i]) {
                System.out.print("[" + entry.key + ": " + entry.value + "] -> ");
            }
            System.out.println("null");
        }
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter the size of the hash table: ");
        int size = scanner.nextInt();
        HashTable hashTable = new HashTable(size);

        while (true) {
            System.out.println("\n1. Insert");
            System.out.println("2. Search");
            System.out.println("3. Remove");
            System.out.println("4. Display");
            System.out.println("5. Exit");
            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    System.out.print("Enter key: ");
                    int key = scanner.nextInt();
                    scanner.nextLine(); // Consume newline
                    System.out.print("Enter value: ");
                    String value = scanner.nextLine();
                    hashTable.insert(key, value);
                    break;
                case 2:
                    System.out.print("Enter key to search: ");
                    key = scanner.nextInt();
                    String result = hashTable.search(key);
                    if (result != null) {
                        System.out.println("Element" +result+ "found in the Hash Table");
                    } else {
                        System.out.println("Key not found.");
                    }
                    break;
                case 3:
                    System.out.print("Enter key to remove: ");
                    key = scanner.nextInt();
                    String removedValue = hashTable.search(key);
                    if (removedValue != null) {
                        System.out.println("Element " +removedValue+ " found in the Hash Table");
                    } else {
                        System.out.println("Key not found.");
                    }
                    break;
                case 4:
                    hashTable.display();
                    break;
                case 5:
                    scanner.close();
                    System.exit(0);
                default:
                    System.out.println("Invalid choice. Try again.");
            }
        }
    }
}
